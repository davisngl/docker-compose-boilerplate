version: '3'

services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./config/Dockerfile
    image: digitalocean.com/php
    container_name: ${APP_NAME}.app
    restart: unless-stopped
    tty: true
    volumes:
       - ./src:/var/www
       - ./config/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      USER: ${PHP_USER}
      GROUP: ${PHP_GROUP}
      PORT: ${PHP_PORT}
    working_dir: /var/www
    networks:
      - app-network

  # Web server
  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}.nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www
      - ./config/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:8.0
    container_name: ${APP_NAME}.db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes: 
      - dbdata:/var/lib/mysql
      - ./config/mysql/my.cnf:/etc/mysql/my.cnf
      - ./config/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-laravel}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-Derived49!}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

  cache:
    image: redis:6.2
    container_name: ${APP_NAME}.cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

  manager:
    image: portainer/portainer-ce
    container_name: ${APP_NAME}.manager
    restart: always
    ports:
      - "9005:9000"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

# Volume definitions
volumes: 
  dbdata:
    driver: local
  portainer_data:
    driver: local

#Docker Networks
networks:
  app-network:
    driver: bridge